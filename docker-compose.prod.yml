version: '3.8'

services:
  conexus-hub-front:
    build:
      context: ./front-vue
      dockerfile: prod.Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /opt/conexus/letsencrypt:/etc/letsencrypt
      - webroot:/usr/share/nginx/html
    networks:
      - conexus-hub-network
    depends_on:
      - conexus-hub-back
    env_file:
      - .env
    environment:
      - NODE_ENV=production

  conexus-hub-back:
    build:
      context: back-node/node
      dockerfile: prod.Dockerfile
    env_file:
      - .env
    environment:
      - NODE_ENV=production
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
      - "3003:3003"
      - "3004:3004"
      - "3005:3005"
      - "3006:3006"
      - "3007:3007"
    depends_on:
      conexus-hub-mysql:
        condition: service_healthy
      conexus-hub-mongodb:
        condition: service_started
    networks:
      - conexus-hub-network
    restart: always
    command: >
      sh -c "
        echo 'Esperando a que MySQL esté disponible...'
        while ! nc -z conexus-hub-mysql 3306; do
          sleep 1
        done
        echo 'MySQL está disponible, iniciando la aplicación...'
        npm run start # para producción
      "
  conexus-hub-mysql:
    image: mysql:5.7
    environment:
      - MYSQL_ROOT_PASSWORD=${NODE_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=conexus-hub
    volumes:
      - mysql-data:/var/lib/mysql
      - ./back-node/data/create_db.sql:/docker-entrypoint-initdb.d/create.sql
      - ./back-node/data/insert_db.sql:/docker-entrypoint-initdb.d/inserts.sql
    networks:
      - conexus-hub-network
    restart: always
    ports:
      - "3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${NODE_DB_ROOT_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s

  conexus-hub-adminer:
    image: adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: conexus-hub-mysql
    restart: always
    networks:
      - conexus-hub-network
    depends_on:
      - conexus-hub-mysql

  conexus-hub-mongodb:
    image: mongo:latest
    restart: always
    container_name: conexus-hub-mongodb-prod
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - conexus-hub-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb://${MONGO_ROOT_USERNAME:-root}:${MONGO_ROOT_PASSWORD:-password}@localhost:27017/admin --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  conexus-hub-mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8082:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_EXPRESS_PASSWORD}
      - ME_CONFIG_MONGODB_URL=${MONGO_ROOT_URL}
      - ME_CONFIG_BASICAUTH="false"
    depends_on:
      - conexus-hub-mongodb
    networks:
      - conexus-hub-network

volumes:
  mysql-data:
  webroot:
  mongo-data:


networks:
  conexus-hub-network:
    driver: bridge
